<?php


/**
 * This class adds structure of 'contacts' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Jun  2 11:52:36 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ContactsMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ContactsMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(ContactsPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(ContactsPeer::TABLE_NAME);
		$tMap->setPhpName('Contacts');
		$tMap->setClassname('Contacts');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('CONTACTID', 'Contactid', 'INTEGER', true, 8);

		$tMap->addColumn('COMPANYNAME', 'Companyname', 'VARCHAR', false, 50);

		$tMap->addColumn('CONTACTFIRSTNAME', 'Contactfirstname', 'VARCHAR', false, 35);

		$tMap->addColumn('CONTACTTUSSENVOEGS', 'Contacttussenvoegs', 'VARCHAR', false, 25);

		$tMap->addColumn('CONTACTNAME', 'Contactname', 'VARCHAR', false, 50);

		$tMap->addColumn('CONTACTTITLE', 'Contacttitle', 'VARCHAR', false, 15);

		$tMap->addColumn('ADDRESS', 'Address', 'VARCHAR', false, 50);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 50);

		$tMap->addColumn('REGION', 'Region', 'VARCHAR', false, 50);

		$tMap->addColumn('POSTALCODE', 'Postalcode', 'VARCHAR', false, 10);

		$tMap->addColumn('COUNTRY', 'Country', 'CHAR', false, 2);

		$tMap->addColumn('LANGUAGEID', 'Languageid', 'TINYINT', true, 3);

		$tMap->addColumn('PHONE', 'Phone', 'VARCHAR', false, 20);

		$tMap->addColumn('FAX', 'Fax', 'VARCHAR', false, 20);

		$tMap->addColumn('MOBILEPHONE', 'Mobilephone', 'VARCHAR', false, 20);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 100);

		$tMap->addColumn('WEBSITE', 'Website', 'VARCHAR', false, 35);

		$tMap->addColumn('KVK_NUMBER', 'KvkNumber', 'VARCHAR', false, 35);

		$tMap->addColumn('USE_BTW', 'UseBtw', 'TINYINT', true, 1);

		$tMap->addColumn('BTW_NUMBER', 'BtwNumber', 'VARCHAR', false, 35);

		$tMap->addColumn('BANKINFO', 'Bankinfo', 'VARCHAR', false, 25);

		$tMap->addColumn('PAYMENTTERM', 'Paymentterm', 'TINYINT', false, 2);

		$tMap->addColumn('PAYMENTTERM_MARGIN', 'PaymenttermMargin', 'TINYINT', false, 2);

		$tMap->addColumn('UPSACCOUNT', 'Upsaccount', 'VARCHAR', false, 10);

		$tMap->addColumn('CONDITIONS_OK_YN', 'ConditionsOkYn', 'VARCHAR', false, 255);

		$tMap->addColumn('MAILING', 'Mailing', 'VARCHAR', false, 255);

		$tMap->addColumn('DEALER_YN', 'DealerYn', 'VARCHAR', false, 255);

		$tMap->addColumn('AUTO_YN', 'AutoYn', 'VARCHAR', false, 255);

		$tMap->addColumn('WATERSPORT_YN', 'WatersportYn', 'VARCHAR', false, 255);

		$tMap->addColumn('FOTO_YN', 'FotoYn', 'VARCHAR', false, 255);

		$tMap->addColumn('SUPPLIER_YN', 'SupplierYn', 'VARCHAR', false, 255);

		$tMap->addColumn('CONTACTTYPEID', 'Contacttypeid', 'SMALLINT', false, 8);

		$tMap->addColumn('AANHEF', 'Aanhef', 'VARCHAR', false, 15);

		$tMap->addColumn('PHONEEXTENTION', 'Phoneextention', 'VARCHAR', false, 10);

		$tMap->addColumn('NOTES', 'Notes', 'CLOB', false, null);

		$tMap->addColumn('PRICELEVEL', 'Pricelevel', 'TINYINT', false, 2);

		$tMap->addColumn('UID', 'Uid', 'VARCHAR', false, 25);

		$tMap->addColumn('PWD', 'Pwd', 'VARCHAR', false, 25);

		$tMap->addColumn('GROUPID', 'Groupid', 'INTEGER', false, 11);

		$tMap->addColumn('ORDERCOSTS', 'Ordercosts', 'TINYINT', false, 4);

		$tMap->addColumn('TRANSPORTCOST', 'Transportcost', 'TINYINT', false, 4);

		$tMap->addColumn('ORDERCOST_TYPE_ID', 'OrdercostTypeId', 'TINYINT', true, 2);

		$tMap->addColumn('CREDITLIMIT', 'Creditlimit', 'INTEGER', false, 10);

		$tMap->addColumn('WAREHOUSE_CUSTOMER', 'WarehouseCustomer', 'TINYINT', true, 1);

		$tMap->addColumn('CONSIGNMENT', 'Consignment', 'TINYINT', true, 1);

		$tMap->addColumn('INVOICE_COPIES', 'InvoiceCopies', 'TINYINT', true, 1);

		$tMap->addColumn('INVOICE_COPIES_IWEX', 'InvoiceCopiesIwex', 'TINYINT', true, 1);

		$tMap->addColumn('INVOICE_OPTION', 'InvoiceOption', 'TINYINT', false, 1);

		$tMap->addColumn('CONFIRM_DELIVERY', 'ConfirmDelivery', 'TINYINT', true, 3);

	} // doBuild()

} // ContactsMapBuilder
