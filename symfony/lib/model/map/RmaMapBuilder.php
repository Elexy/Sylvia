<?php


/**
 * This class adds structure of 'RMA' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Jun  2 11:52:34 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class RmaMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.RmaMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(RmaPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(RmaPeer::TABLE_NAME);
		$tMap->setPhpName('Rma');
		$tMap->setClassname('Rma');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 8);

		$tMap->addColumn('CONTACTS_ID', 'ContactsId', 'INTEGER', false, 8);

		$tMap->addColumn('PRODUCTID', 'Productid', 'INTEGER', false, 10);

		$tMap->addColumn('AANTAL', 'Aantal', 'SMALLINT', false, 1);

		$tMap->addColumn('CUSTOMER_ID', 'CustomerId', 'VARCHAR', false, 20);

		$tMap->addColumn('SUPPLIERID', 'Supplierid', 'VARCHAR', false, 20);

		$tMap->addColumn('DATE_IN', 'DateIn', 'DATE', false, null);

		$tMap->addColumn('SN', 'Sn', 'VARCHAR', false, 50);

		$tMap->addColumn('REASON', 'Reason', 'LONGVARCHAR', false, null);

		$tMap->addColumn('DATE_DONE', 'DateDone', 'DATE', false, null);

		$tMap->addColumn('ADDITIONAL_ITEMS', 'AdditionalItems', 'VARCHAR', false, 50);

		$tMap->addColumn('ATICLE_CODE', 'AticleCode', 'TINYINT', false, 10);

		$tMap->addColumn('ARTICLE_NAME', 'ArticleName', 'VARCHAR', false, 25);

		$tMap->addColumn('FACTUURID', 'Factuurid', 'INTEGER', false, 10);

		$tMap->addColumn('STATE', 'State', 'TINYINT', true, 3);

		$tMap->addColumn('PRODUCT_CUSTOMER', 'ProductCustomer', 'TINYINT', true, 3);

		$tMap->addColumn('PRODUCT_LOCATION', 'ProductLocation', 'TINYINT', true, 3);

		$tMap->addColumn('PRODUCT_STATE', 'ProductState', 'TINYINT', true, 1);

		$tMap->addColumn('VALID', 'Valid', 'TINYINT', false, 1);

		$tMap->addColumn('WEBUSER', 'Webuser', 'VARCHAR', false, 30);

	} // doBuild()

} // RmaMapBuilder
