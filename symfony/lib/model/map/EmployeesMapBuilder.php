<?php


/**
 * This class adds structure of 'employees' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Jun  2 11:52:36 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class EmployeesMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.EmployeesMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(EmployeesPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(EmployeesPeer::TABLE_NAME);
		$tMap->setPhpName('Employees');
		$tMap->setClassname('Employees');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('EMPLOYEEID', 'Employeeid', 'INTEGER', true, 1);

		$tMap->addColumn('FIRSTNAME', 'Firstname', 'VARCHAR', false, 50);

		$tMap->addColumn('MIDDLENAME', 'Middlename', 'VARCHAR', false, 25);

		$tMap->addColumn('LASTNAME', 'Lastname', 'VARCHAR', false, 50);

		$tMap->addColumn('TITLE', 'Title', 'VARCHAR', false, 50);

		$tMap->addColumn('EXTENSION', 'Extension', 'VARCHAR', false, 50);

		$tMap->addColumn('WORKPHONE', 'Workphone', 'VARCHAR', false, 50);

		$tMap->addColumn('HOMEPHONE', 'Homephone', 'VARCHAR', false, 50);

		$tMap->addColumn('MOBILEPHONE', 'Mobilephone', 'VARCHAR', false, 50);

		$tMap->addColumn('LOGIN', 'Login', 'VARCHAR', true, 25);

		$tMap->addColumn('PWD', 'Pwd', 'VARCHAR', true, 25);

		$tMap->addColumn('UID', 'Uid', 'VARCHAR', true, 25);

		$tMap->addColumn('GROUPID', 'Groupid', 'INTEGER', true, 11);

		$tMap->addColumn('ADDRESS', 'Address', 'VARCHAR', false, 100);

		$tMap->addColumn('POSTCODE', 'Postcode', 'VARCHAR', false, 15);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 100);

		$tMap->addColumn('BIRTH_DATE', 'BirthDate', 'DATE', false, null);

		$tMap->addColumn('GENDER', 'Gender', 'VARCHAR', false, 10);

		$tMap->addColumn('PASSPORT', 'Passport', 'VARCHAR', false, 25);

		$tMap->addColumn('SOFINUMBER', 'Sofinumber', 'VARCHAR', false, 25);

		$tMap->addColumn('SALARY_MONTH', 'SalaryMonth', 'FLOAT', false, null);

		$tMap->addColumn('START', 'Start', 'DATE', false, null);

		$tMap->addColumn('END', 'End', 'DATE', false, null);

		$tMap->addColumn('BANKREKENING', 'Bankrekening', 'INTEGER', true, 10);

		$tMap->addColumn('GIROREKENING', 'Girorekening', 'INTEGER', true, 10);

		$tMap->addColumn('AFSTAND_KM', 'AfstandKm', 'FLOAT', false, null);

	} // doBuild()

} // EmployeesMapBuilder
