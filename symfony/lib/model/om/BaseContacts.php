<?php

/**
 * Base class that represents a row from the 'contacts' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Jun  2 11:52:35 2009
 *
 * @package    lib.model.om
 */
abstract class BaseContacts extends BaseObject  implements Persistent {


  const PEER = 'ContactsPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        ContactsPeer
	 */
	protected static $peer;

	/**
	 * The value for the contactid field.
	 * @var        int
	 */
	protected $contactid;

	/**
	 * The value for the companyname field.
	 * @var        string
	 */
	protected $companyname;

	/**
	 * The value for the contactfirstname field.
	 * @var        string
	 */
	protected $contactfirstname;

	/**
	 * The value for the contacttussenvoegs field.
	 * @var        string
	 */
	protected $contacttussenvoegs;

	/**
	 * The value for the contactname field.
	 * @var        string
	 */
	protected $contactname;

	/**
	 * The value for the contacttitle field.
	 * @var        string
	 */
	protected $contacttitle;

	/**
	 * The value for the address field.
	 * @var        string
	 */
	protected $address;

	/**
	 * The value for the city field.
	 * @var        string
	 */
	protected $city;

	/**
	 * The value for the region field.
	 * @var        string
	 */
	protected $region;

	/**
	 * The value for the postalcode field.
	 * @var        string
	 */
	protected $postalcode;

	/**
	 * The value for the country field.
	 * @var        string
	 */
	protected $country;

	/**
	 * The value for the languageid field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $languageid;

	/**
	 * The value for the phone field.
	 * @var        string
	 */
	protected $phone;

	/**
	 * The value for the fax field.
	 * @var        string
	 */
	protected $fax;

	/**
	 * The value for the mobilephone field.
	 * @var        string
	 */
	protected $mobilephone;

	/**
	 * The value for the email field.
	 * @var        string
	 */
	protected $email;

	/**
	 * The value for the website field.
	 * @var        string
	 */
	protected $website;

	/**
	 * The value for the kvk_number field.
	 * @var        string
	 */
	protected $kvk_number;

	/**
	 * The value for the use_btw field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $use_btw;

	/**
	 * The value for the btw_number field.
	 * @var        string
	 */
	protected $btw_number;

	/**
	 * The value for the bankinfo field.
	 * @var        string
	 */
	protected $bankinfo;

	/**
	 * The value for the paymentterm field.
	 * Note: this column has a database default value of: 4
	 * @var        int
	 */
	protected $paymentterm;

	/**
	 * The value for the paymentterm_margin field.
	 * Note: this column has a database default value of: 3
	 * @var        int
	 */
	protected $paymentterm_margin;

	/**
	 * The value for the upsaccount field.
	 * @var        string
	 */
	protected $upsaccount;

	/**
	 * The value for the conditions_ok_yn field.
	 * @var        string
	 */
	protected $conditions_ok_yn;

	/**
	 * The value for the mailing field.
	 * @var        string
	 */
	protected $mailing;

	/**
	 * The value for the dealer_yn field.
	 * @var        string
	 */
	protected $dealer_yn;

	/**
	 * The value for the auto_yn field.
	 * @var        string
	 */
	protected $auto_yn;

	/**
	 * The value for the watersport_yn field.
	 * @var        string
	 */
	protected $watersport_yn;

	/**
	 * The value for the foto_yn field.
	 * @var        string
	 */
	protected $foto_yn;

	/**
	 * The value for the supplier_yn field.
	 * @var        string
	 */
	protected $supplier_yn;

	/**
	 * The value for the contacttypeid field.
	 * @var        int
	 */
	protected $contacttypeid;

	/**
	 * The value for the aanhef field.
	 * @var        string
	 */
	protected $aanhef;

	/**
	 * The value for the phoneextention field.
	 * @var        string
	 */
	protected $phoneextention;

	/**
	 * The value for the notes field.
	 * @var        string
	 */
	protected $notes;

	/**
	 * The value for the pricelevel field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $pricelevel;

	/**
	 * The value for the uid field.
	 * @var        string
	 */
	protected $uid;

	/**
	 * The value for the pwd field.
	 * @var        string
	 */
	protected $pwd;

	/**
	 * The value for the groupid field.
	 * @var        int
	 */
	protected $groupid;

	/**
	 * The value for the ordercosts field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $ordercosts;

	/**
	 * The value for the transportcost field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $transportcost;

	/**
	 * The value for the ordercost_type_id field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $ordercost_type_id;

	/**
	 * The value for the creditlimit field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $creditlimit;

	/**
	 * The value for the warehouse_customer field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $warehouse_customer;

	/**
	 * The value for the consignment field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $consignment;

	/**
	 * The value for the invoice_copies field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $invoice_copies;

	/**
	 * The value for the invoice_copies_iwex field.
	 * Note: this column has a database default value of: 1
	 * @var        int
	 */
	protected $invoice_copies_iwex;

	/**
	 * The value for the invoice_option field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $invoice_option;

	/**
	 * The value for the confirm_delivery field.
	 * @var        int
	 */
	protected $confirm_delivery;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseContacts object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
		$this->languageid = 1;
		$this->use_btw = 1;
		$this->paymentterm = 4;
		$this->paymentterm_margin = 3;
		$this->pricelevel = 1;
		$this->ordercosts = 1;
		$this->transportcost = 1;
		$this->ordercost_type_id = 1;
		$this->creditlimit = 0;
		$this->warehouse_customer = 0;
		$this->consignment = 0;
		$this->invoice_copies = 1;
		$this->invoice_copies_iwex = 1;
		$this->invoice_option = 0;
	}

	/**
	 * Get the [contactid] column value.
	 * 
	 * @return     int
	 */
	public function getContactid()
	{
		return $this->contactid;
	}

	/**
	 * Get the [companyname] column value.
	 * 
	 * @return     string
	 */
	public function getCompanyname()
	{
		return $this->companyname;
	}

	/**
	 * Get the [contactfirstname] column value.
	 * 
	 * @return     string
	 */
	public function getContactfirstname()
	{
		return $this->contactfirstname;
	}

	/**
	 * Get the [contacttussenvoegs] column value.
	 * 
	 * @return     string
	 */
	public function getContacttussenvoegs()
	{
		return $this->contacttussenvoegs;
	}

	/**
	 * Get the [contactname] column value.
	 * 
	 * @return     string
	 */
	public function getContactname()
	{
		return $this->contactname;
	}

	/**
	 * Get the [contacttitle] column value.
	 * 
	 * @return     string
	 */
	public function getContacttitle()
	{
		return $this->contacttitle;
	}

	/**
	 * Get the [address] column value.
	 * 
	 * @return     string
	 */
	public function getAddress()
	{
		return $this->address;
	}

	/**
	 * Get the [city] column value.
	 * 
	 * @return     string
	 */
	public function getCity()
	{
		return $this->city;
	}

	/**
	 * Get the [region] column value.
	 * 
	 * @return     string
	 */
	public function getRegion()
	{
		return $this->region;
	}

	/**
	 * Get the [postalcode] column value.
	 * 
	 * @return     string
	 */
	public function getPostalcode()
	{
		return $this->postalcode;
	}

	/**
	 * Get the [country] column value.
	 * 
	 * @return     string
	 */
	public function getCountry()
	{
		return $this->country;
	}

	/**
	 * Get the [languageid] column value.
	 * 
	 * @return     int
	 */
	public function getLanguageid()
	{
		return $this->languageid;
	}

	/**
	 * Get the [phone] column value.
	 * 
	 * @return     string
	 */
	public function getPhone()
	{
		return $this->phone;
	}

	/**
	 * Get the [fax] column value.
	 * 
	 * @return     string
	 */
	public function getFax()
	{
		return $this->fax;
	}

	/**
	 * Get the [mobilephone] column value.
	 * 
	 * @return     string
	 */
	public function getMobilephone()
	{
		return $this->mobilephone;
	}

	/**
	 * Get the [email] column value.
	 * 
	 * @return     string
	 */
	public function getEmail()
	{
		return $this->email;
	}

	/**
	 * Get the [website] column value.
	 * 
	 * @return     string
	 */
	public function getWebsite()
	{
		return $this->website;
	}

	/**
	 * Get the [kvk_number] column value.
	 * 
	 * @return     string
	 */
	public function getKvkNumber()
	{
		return $this->kvk_number;
	}

	/**
	 * Get the [use_btw] column value.
	 * 
	 * @return     int
	 */
	public function getUseBtw()
	{
		return $this->use_btw;
	}

	/**
	 * Get the [btw_number] column value.
	 * 
	 * @return     string
	 */
	public function getBtwNumber()
	{
		return $this->btw_number;
	}

	/**
	 * Get the [bankinfo] column value.
	 * 
	 * @return     string
	 */
	public function getBankinfo()
	{
		return $this->bankinfo;
	}

	/**
	 * Get the [paymentterm] column value.
	 * 
	 * @return     int
	 */
	public function getPaymentterm()
	{
		return $this->paymentterm;
	}

	/**
	 * Get the [paymentterm_margin] column value.
	 * 
	 * @return     int
	 */
	public function getPaymenttermMargin()
	{
		return $this->paymentterm_margin;
	}

	/**
	 * Get the [upsaccount] column value.
	 * 
	 * @return     string
	 */
	public function getUpsaccount()
	{
		return $this->upsaccount;
	}

	/**
	 * Get the [conditions_ok_yn] column value.
	 * 
	 * @return     string
	 */
	public function getConditionsOkYn()
	{
		return $this->conditions_ok_yn;
	}

	/**
	 * Get the [mailing] column value.
	 * 
	 * @return     string
	 */
	public function getMailing()
	{
		return $this->mailing;
	}

	/**
	 * Get the [dealer_yn] column value.
	 * 
	 * @return     string
	 */
	public function getDealerYn()
	{
		return $this->dealer_yn;
	}

	/**
	 * Get the [auto_yn] column value.
	 * 
	 * @return     string
	 */
	public function getAutoYn()
	{
		return $this->auto_yn;
	}

	/**
	 * Get the [watersport_yn] column value.
	 * 
	 * @return     string
	 */
	public function getWatersportYn()
	{
		return $this->watersport_yn;
	}

	/**
	 * Get the [foto_yn] column value.
	 * 
	 * @return     string
	 */
	public function getFotoYn()
	{
		return $this->foto_yn;
	}

	/**
	 * Get the [supplier_yn] column value.
	 * 
	 * @return     string
	 */
	public function getSupplierYn()
	{
		return $this->supplier_yn;
	}

	/**
	 * Get the [contacttypeid] column value.
	 * 
	 * @return     int
	 */
	public function getContacttypeid()
	{
		return $this->contacttypeid;
	}

	/**
	 * Get the [aanhef] column value.
	 * 
	 * @return     string
	 */
	public function getAanhef()
	{
		return $this->aanhef;
	}

	/**
	 * Get the [phoneextention] column value.
	 * 
	 * @return     string
	 */
	public function getPhoneextention()
	{
		return $this->phoneextention;
	}

	/**
	 * Get the [notes] column value.
	 * 
	 * @return     string
	 */
	public function getNotes()
	{
		return $this->notes;
	}

	/**
	 * Get the [pricelevel] column value.
	 * 
	 * @return     int
	 */
	public function getPricelevel()
	{
		return $this->pricelevel;
	}

	/**
	 * Get the [uid] column value.
	 * 
	 * @return     string
	 */
	public function getUid()
	{
		return $this->uid;
	}

	/**
	 * Get the [pwd] column value.
	 * 
	 * @return     string
	 */
	public function getPwd()
	{
		return $this->pwd;
	}

	/**
	 * Get the [groupid] column value.
	 * 
	 * @return     int
	 */
	public function getGroupid()
	{
		return $this->groupid;
	}

	/**
	 * Get the [ordercosts] column value.
	 * 
	 * @return     int
	 */
	public function getOrdercosts()
	{
		return $this->ordercosts;
	}

	/**
	 * Get the [transportcost] column value.
	 * 
	 * @return     int
	 */
	public function getTransportcost()
	{
		return $this->transportcost;
	}

	/**
	 * Get the [ordercost_type_id] column value.
	 * 
	 * @return     int
	 */
	public function getOrdercostTypeId()
	{
		return $this->ordercost_type_id;
	}

	/**
	 * Get the [creditlimit] column value.
	 * 
	 * @return     int
	 */
	public function getCreditlimit()
	{
		return $this->creditlimit;
	}

	/**
	 * Get the [warehouse_customer] column value.
	 * 
	 * @return     int
	 */
	public function getWarehouseCustomer()
	{
		return $this->warehouse_customer;
	}

	/**
	 * Get the [consignment] column value.
	 * 
	 * @return     int
	 */
	public function getConsignment()
	{
		return $this->consignment;
	}

	/**
	 * Get the [invoice_copies] column value.
	 * 
	 * @return     int
	 */
	public function getInvoiceCopies()
	{
		return $this->invoice_copies;
	}

	/**
	 * Get the [invoice_copies_iwex] column value.
	 * 
	 * @return     int
	 */
	public function getInvoiceCopiesIwex()
	{
		return $this->invoice_copies_iwex;
	}

	/**
	 * Get the [invoice_option] column value.
	 * 
	 * @return     int
	 */
	public function getInvoiceOption()
	{
		return $this->invoice_option;
	}

	/**
	 * Get the [confirm_delivery] column value.
	 * 
	 * @return     int
	 */
	public function getConfirmDelivery()
	{
		return $this->confirm_delivery;
	}

	/**
	 * Set the value of [contactid] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setContactid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->contactid !== $v) {
			$this->contactid = $v;
			$this->modifiedColumns[] = ContactsPeer::CONTACTID;
		}

		return $this;
	} // setContactid()

	/**
	 * Set the value of [companyname] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setCompanyname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->companyname !== $v) {
			$this->companyname = $v;
			$this->modifiedColumns[] = ContactsPeer::COMPANYNAME;
		}

		return $this;
	} // setCompanyname()

	/**
	 * Set the value of [contactfirstname] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setContactfirstname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->contactfirstname !== $v) {
			$this->contactfirstname = $v;
			$this->modifiedColumns[] = ContactsPeer::CONTACTFIRSTNAME;
		}

		return $this;
	} // setContactfirstname()

	/**
	 * Set the value of [contacttussenvoegs] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setContacttussenvoegs($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->contacttussenvoegs !== $v) {
			$this->contacttussenvoegs = $v;
			$this->modifiedColumns[] = ContactsPeer::CONTACTTUSSENVOEGS;
		}

		return $this;
	} // setContacttussenvoegs()

	/**
	 * Set the value of [contactname] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setContactname($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->contactname !== $v) {
			$this->contactname = $v;
			$this->modifiedColumns[] = ContactsPeer::CONTACTNAME;
		}

		return $this;
	} // setContactname()

	/**
	 * Set the value of [contacttitle] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setContacttitle($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->contacttitle !== $v) {
			$this->contacttitle = $v;
			$this->modifiedColumns[] = ContactsPeer::CONTACTTITLE;
		}

		return $this;
	} // setContacttitle()

	/**
	 * Set the value of [address] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setAddress($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->address !== $v) {
			$this->address = $v;
			$this->modifiedColumns[] = ContactsPeer::ADDRESS;
		}

		return $this;
	} // setAddress()

	/**
	 * Set the value of [city] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setCity($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->city !== $v) {
			$this->city = $v;
			$this->modifiedColumns[] = ContactsPeer::CITY;
		}

		return $this;
	} // setCity()

	/**
	 * Set the value of [region] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setRegion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->region !== $v) {
			$this->region = $v;
			$this->modifiedColumns[] = ContactsPeer::REGION;
		}

		return $this;
	} // setRegion()

	/**
	 * Set the value of [postalcode] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPostalcode($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->postalcode !== $v) {
			$this->postalcode = $v;
			$this->modifiedColumns[] = ContactsPeer::POSTALCODE;
		}

		return $this;
	} // setPostalcode()

	/**
	 * Set the value of [country] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setCountry($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->country !== $v) {
			$this->country = $v;
			$this->modifiedColumns[] = ContactsPeer::COUNTRY;
		}

		return $this;
	} // setCountry()

	/**
	 * Set the value of [languageid] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setLanguageid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->languageid !== $v || $v === 1) {
			$this->languageid = $v;
			$this->modifiedColumns[] = ContactsPeer::LANGUAGEID;
		}

		return $this;
	} // setLanguageid()

	/**
	 * Set the value of [phone] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPhone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->phone !== $v) {
			$this->phone = $v;
			$this->modifiedColumns[] = ContactsPeer::PHONE;
		}

		return $this;
	} // setPhone()

	/**
	 * Set the value of [fax] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fax !== $v) {
			$this->fax = $v;
			$this->modifiedColumns[] = ContactsPeer::FAX;
		}

		return $this;
	} // setFax()

	/**
	 * Set the value of [mobilephone] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setMobilephone($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mobilephone !== $v) {
			$this->mobilephone = $v;
			$this->modifiedColumns[] = ContactsPeer::MOBILEPHONE;
		}

		return $this;
	} // setMobilephone()

	/**
	 * Set the value of [email] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->email !== $v) {
			$this->email = $v;
			$this->modifiedColumns[] = ContactsPeer::EMAIL;
		}

		return $this;
	} // setEmail()

	/**
	 * Set the value of [website] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setWebsite($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->website !== $v) {
			$this->website = $v;
			$this->modifiedColumns[] = ContactsPeer::WEBSITE;
		}

		return $this;
	} // setWebsite()

	/**
	 * Set the value of [kvk_number] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setKvkNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->kvk_number !== $v) {
			$this->kvk_number = $v;
			$this->modifiedColumns[] = ContactsPeer::KVK_NUMBER;
		}

		return $this;
	} // setKvkNumber()

	/**
	 * Set the value of [use_btw] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setUseBtw($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->use_btw !== $v || $v === 1) {
			$this->use_btw = $v;
			$this->modifiedColumns[] = ContactsPeer::USE_BTW;
		}

		return $this;
	} // setUseBtw()

	/**
	 * Set the value of [btw_number] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setBtwNumber($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->btw_number !== $v) {
			$this->btw_number = $v;
			$this->modifiedColumns[] = ContactsPeer::BTW_NUMBER;
		}

		return $this;
	} // setBtwNumber()

	/**
	 * Set the value of [bankinfo] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setBankinfo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->bankinfo !== $v) {
			$this->bankinfo = $v;
			$this->modifiedColumns[] = ContactsPeer::BANKINFO;
		}

		return $this;
	} // setBankinfo()

	/**
	 * Set the value of [paymentterm] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPaymentterm($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->paymentterm !== $v || $v === 4) {
			$this->paymentterm = $v;
			$this->modifiedColumns[] = ContactsPeer::PAYMENTTERM;
		}

		return $this;
	} // setPaymentterm()

	/**
	 * Set the value of [paymentterm_margin] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPaymenttermMargin($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->paymentterm_margin !== $v || $v === 3) {
			$this->paymentterm_margin = $v;
			$this->modifiedColumns[] = ContactsPeer::PAYMENTTERM_MARGIN;
		}

		return $this;
	} // setPaymenttermMargin()

	/**
	 * Set the value of [upsaccount] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setUpsaccount($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->upsaccount !== $v) {
			$this->upsaccount = $v;
			$this->modifiedColumns[] = ContactsPeer::UPSACCOUNT;
		}

		return $this;
	} // setUpsaccount()

	/**
	 * Set the value of [conditions_ok_yn] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setConditionsOkYn($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->conditions_ok_yn !== $v) {
			$this->conditions_ok_yn = $v;
			$this->modifiedColumns[] = ContactsPeer::CONDITIONS_OK_YN;
		}

		return $this;
	} // setConditionsOkYn()

	/**
	 * Set the value of [mailing] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setMailing($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mailing !== $v) {
			$this->mailing = $v;
			$this->modifiedColumns[] = ContactsPeer::MAILING;
		}

		return $this;
	} // setMailing()

	/**
	 * Set the value of [dealer_yn] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setDealerYn($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dealer_yn !== $v) {
			$this->dealer_yn = $v;
			$this->modifiedColumns[] = ContactsPeer::DEALER_YN;
		}

		return $this;
	} // setDealerYn()

	/**
	 * Set the value of [auto_yn] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setAutoYn($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->auto_yn !== $v) {
			$this->auto_yn = $v;
			$this->modifiedColumns[] = ContactsPeer::AUTO_YN;
		}

		return $this;
	} // setAutoYn()

	/**
	 * Set the value of [watersport_yn] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setWatersportYn($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->watersport_yn !== $v) {
			$this->watersport_yn = $v;
			$this->modifiedColumns[] = ContactsPeer::WATERSPORT_YN;
		}

		return $this;
	} // setWatersportYn()

	/**
	 * Set the value of [foto_yn] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setFotoYn($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->foto_yn !== $v) {
			$this->foto_yn = $v;
			$this->modifiedColumns[] = ContactsPeer::FOTO_YN;
		}

		return $this;
	} // setFotoYn()

	/**
	 * Set the value of [supplier_yn] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setSupplierYn($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->supplier_yn !== $v) {
			$this->supplier_yn = $v;
			$this->modifiedColumns[] = ContactsPeer::SUPPLIER_YN;
		}

		return $this;
	} // setSupplierYn()

	/**
	 * Set the value of [contacttypeid] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setContacttypeid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->contacttypeid !== $v) {
			$this->contacttypeid = $v;
			$this->modifiedColumns[] = ContactsPeer::CONTACTTYPEID;
		}

		return $this;
	} // setContacttypeid()

	/**
	 * Set the value of [aanhef] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setAanhef($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->aanhef !== $v) {
			$this->aanhef = $v;
			$this->modifiedColumns[] = ContactsPeer::AANHEF;
		}

		return $this;
	} // setAanhef()

	/**
	 * Set the value of [phoneextention] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPhoneextention($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->phoneextention !== $v) {
			$this->phoneextention = $v;
			$this->modifiedColumns[] = ContactsPeer::PHONEEXTENTION;
		}

		return $this;
	} // setPhoneextention()

	/**
	 * Set the value of [notes] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setNotes($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->notes !== $v) {
			$this->notes = $v;
			$this->modifiedColumns[] = ContactsPeer::NOTES;
		}

		return $this;
	} // setNotes()

	/**
	 * Set the value of [pricelevel] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPricelevel($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->pricelevel !== $v || $v === 1) {
			$this->pricelevel = $v;
			$this->modifiedColumns[] = ContactsPeer::PRICELEVEL;
		}

		return $this;
	} // setPricelevel()

	/**
	 * Set the value of [uid] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setUid($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->uid !== $v) {
			$this->uid = $v;
			$this->modifiedColumns[] = ContactsPeer::UID;
		}

		return $this;
	} // setUid()

	/**
	 * Set the value of [pwd] column.
	 * 
	 * @param      string $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setPwd($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pwd !== $v) {
			$this->pwd = $v;
			$this->modifiedColumns[] = ContactsPeer::PWD;
		}

		return $this;
	} // setPwd()

	/**
	 * Set the value of [groupid] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setGroupid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->groupid !== $v) {
			$this->groupid = $v;
			$this->modifiedColumns[] = ContactsPeer::GROUPID;
		}

		return $this;
	} // setGroupid()

	/**
	 * Set the value of [ordercosts] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setOrdercosts($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ordercosts !== $v || $v === 1) {
			$this->ordercosts = $v;
			$this->modifiedColumns[] = ContactsPeer::ORDERCOSTS;
		}

		return $this;
	} // setOrdercosts()

	/**
	 * Set the value of [transportcost] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setTransportcost($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->transportcost !== $v || $v === 1) {
			$this->transportcost = $v;
			$this->modifiedColumns[] = ContactsPeer::TRANSPORTCOST;
		}

		return $this;
	} // setTransportcost()

	/**
	 * Set the value of [ordercost_type_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setOrdercostTypeId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ordercost_type_id !== $v || $v === 1) {
			$this->ordercost_type_id = $v;
			$this->modifiedColumns[] = ContactsPeer::ORDERCOST_TYPE_ID;
		}

		return $this;
	} // setOrdercostTypeId()

	/**
	 * Set the value of [creditlimit] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setCreditlimit($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->creditlimit !== $v || $v === 0) {
			$this->creditlimit = $v;
			$this->modifiedColumns[] = ContactsPeer::CREDITLIMIT;
		}

		return $this;
	} // setCreditlimit()

	/**
	 * Set the value of [warehouse_customer] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setWarehouseCustomer($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->warehouse_customer !== $v || $v === 0) {
			$this->warehouse_customer = $v;
			$this->modifiedColumns[] = ContactsPeer::WAREHOUSE_CUSTOMER;
		}

		return $this;
	} // setWarehouseCustomer()

	/**
	 * Set the value of [consignment] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setConsignment($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->consignment !== $v || $v === 0) {
			$this->consignment = $v;
			$this->modifiedColumns[] = ContactsPeer::CONSIGNMENT;
		}

		return $this;
	} // setConsignment()

	/**
	 * Set the value of [invoice_copies] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setInvoiceCopies($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->invoice_copies !== $v || $v === 1) {
			$this->invoice_copies = $v;
			$this->modifiedColumns[] = ContactsPeer::INVOICE_COPIES;
		}

		return $this;
	} // setInvoiceCopies()

	/**
	 * Set the value of [invoice_copies_iwex] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setInvoiceCopiesIwex($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->invoice_copies_iwex !== $v || $v === 1) {
			$this->invoice_copies_iwex = $v;
			$this->modifiedColumns[] = ContactsPeer::INVOICE_COPIES_IWEX;
		}

		return $this;
	} // setInvoiceCopiesIwex()

	/**
	 * Set the value of [invoice_option] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setInvoiceOption($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->invoice_option !== $v || $v === 0) {
			$this->invoice_option = $v;
			$this->modifiedColumns[] = ContactsPeer::INVOICE_OPTION;
		}

		return $this;
	} // setInvoiceOption()

	/**
	 * Set the value of [confirm_delivery] column.
	 * 
	 * @param      int $v new value
	 * @return     Contacts The current object (for fluent API support)
	 */
	public function setConfirmDelivery($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->confirm_delivery !== $v) {
			$this->confirm_delivery = $v;
			$this->modifiedColumns[] = ContactsPeer::CONFIRM_DELIVERY;
		}

		return $this;
	} // setConfirmDelivery()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array(ContactsPeer::LANGUAGEID,ContactsPeer::USE_BTW,ContactsPeer::PAYMENTTERM,ContactsPeer::PAYMENTTERM_MARGIN,ContactsPeer::PRICELEVEL,ContactsPeer::ORDERCOSTS,ContactsPeer::TRANSPORTCOST,ContactsPeer::ORDERCOST_TYPE_ID,ContactsPeer::CREDITLIMIT,ContactsPeer::WAREHOUSE_CUSTOMER,ContactsPeer::CONSIGNMENT,ContactsPeer::INVOICE_COPIES,ContactsPeer::INVOICE_COPIES_IWEX,ContactsPeer::INVOICE_OPTION))) {
				return false;
			}

			if ($this->languageid !== 1) {
				return false;
			}

			if ($this->use_btw !== 1) {
				return false;
			}

			if ($this->paymentterm !== 4) {
				return false;
			}

			if ($this->paymentterm_margin !== 3) {
				return false;
			}

			if ($this->pricelevel !== 1) {
				return false;
			}

			if ($this->ordercosts !== 1) {
				return false;
			}

			if ($this->transportcost !== 1) {
				return false;
			}

			if ($this->ordercost_type_id !== 1) {
				return false;
			}

			if ($this->creditlimit !== 0) {
				return false;
			}

			if ($this->warehouse_customer !== 0) {
				return false;
			}

			if ($this->consignment !== 0) {
				return false;
			}

			if ($this->invoice_copies !== 1) {
				return false;
			}

			if ($this->invoice_copies_iwex !== 1) {
				return false;
			}

			if ($this->invoice_option !== 0) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->contactid = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->companyname = ($row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->contactfirstname = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->contacttussenvoegs = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->contactname = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->contacttitle = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->address = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->city = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->region = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->postalcode = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->country = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->languageid = ($row[$startcol + 11] !== null) ? (int) $row[$startcol + 11] : null;
			$this->phone = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->fax = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->mobilephone = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->email = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->website = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->kvk_number = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->use_btw = ($row[$startcol + 18] !== null) ? (int) $row[$startcol + 18] : null;
			$this->btw_number = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->bankinfo = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->paymentterm = ($row[$startcol + 21] !== null) ? (int) $row[$startcol + 21] : null;
			$this->paymentterm_margin = ($row[$startcol + 22] !== null) ? (int) $row[$startcol + 22] : null;
			$this->upsaccount = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->conditions_ok_yn = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->mailing = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->dealer_yn = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->auto_yn = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->watersport_yn = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->foto_yn = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->supplier_yn = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->contacttypeid = ($row[$startcol + 31] !== null) ? (int) $row[$startcol + 31] : null;
			$this->aanhef = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->phoneextention = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->notes = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->pricelevel = ($row[$startcol + 35] !== null) ? (int) $row[$startcol + 35] : null;
			$this->uid = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->pwd = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->groupid = ($row[$startcol + 38] !== null) ? (int) $row[$startcol + 38] : null;
			$this->ordercosts = ($row[$startcol + 39] !== null) ? (int) $row[$startcol + 39] : null;
			$this->transportcost = ($row[$startcol + 40] !== null) ? (int) $row[$startcol + 40] : null;
			$this->ordercost_type_id = ($row[$startcol + 41] !== null) ? (int) $row[$startcol + 41] : null;
			$this->creditlimit = ($row[$startcol + 42] !== null) ? (int) $row[$startcol + 42] : null;
			$this->warehouse_customer = ($row[$startcol + 43] !== null) ? (int) $row[$startcol + 43] : null;
			$this->consignment = ($row[$startcol + 44] !== null) ? (int) $row[$startcol + 44] : null;
			$this->invoice_copies = ($row[$startcol + 45] !== null) ? (int) $row[$startcol + 45] : null;
			$this->invoice_copies_iwex = ($row[$startcol + 46] !== null) ? (int) $row[$startcol + 46] : null;
			$this->invoice_option = ($row[$startcol + 47] !== null) ? (int) $row[$startcol + 47] : null;
			$this->confirm_delivery = ($row[$startcol + 48] !== null) ? (int) $row[$startcol + 48] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 49; // 49 = ContactsPeer::NUM_COLUMNS - ContactsPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Contacts object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(ContactsPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = ContactsPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseContacts:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(ContactsPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			ContactsPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseContacts:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseContacts:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(ContactsPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseContacts:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			ContactsPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = ContactsPeer::CONTACTID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = ContactsPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setContactid($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += ContactsPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = ContactsPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = ContactsPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getContactid();
				break;
			case 1:
				return $this->getCompanyname();
				break;
			case 2:
				return $this->getContactfirstname();
				break;
			case 3:
				return $this->getContacttussenvoegs();
				break;
			case 4:
				return $this->getContactname();
				break;
			case 5:
				return $this->getContacttitle();
				break;
			case 6:
				return $this->getAddress();
				break;
			case 7:
				return $this->getCity();
				break;
			case 8:
				return $this->getRegion();
				break;
			case 9:
				return $this->getPostalcode();
				break;
			case 10:
				return $this->getCountry();
				break;
			case 11:
				return $this->getLanguageid();
				break;
			case 12:
				return $this->getPhone();
				break;
			case 13:
				return $this->getFax();
				break;
			case 14:
				return $this->getMobilephone();
				break;
			case 15:
				return $this->getEmail();
				break;
			case 16:
				return $this->getWebsite();
				break;
			case 17:
				return $this->getKvkNumber();
				break;
			case 18:
				return $this->getUseBtw();
				break;
			case 19:
				return $this->getBtwNumber();
				break;
			case 20:
				return $this->getBankinfo();
				break;
			case 21:
				return $this->getPaymentterm();
				break;
			case 22:
				return $this->getPaymenttermMargin();
				break;
			case 23:
				return $this->getUpsaccount();
				break;
			case 24:
				return $this->getConditionsOkYn();
				break;
			case 25:
				return $this->getMailing();
				break;
			case 26:
				return $this->getDealerYn();
				break;
			case 27:
				return $this->getAutoYn();
				break;
			case 28:
				return $this->getWatersportYn();
				break;
			case 29:
				return $this->getFotoYn();
				break;
			case 30:
				return $this->getSupplierYn();
				break;
			case 31:
				return $this->getContacttypeid();
				break;
			case 32:
				return $this->getAanhef();
				break;
			case 33:
				return $this->getPhoneextention();
				break;
			case 34:
				return $this->getNotes();
				break;
			case 35:
				return $this->getPricelevel();
				break;
			case 36:
				return $this->getUid();
				break;
			case 37:
				return $this->getPwd();
				break;
			case 38:
				return $this->getGroupid();
				break;
			case 39:
				return $this->getOrdercosts();
				break;
			case 40:
				return $this->getTransportcost();
				break;
			case 41:
				return $this->getOrdercostTypeId();
				break;
			case 42:
				return $this->getCreditlimit();
				break;
			case 43:
				return $this->getWarehouseCustomer();
				break;
			case 44:
				return $this->getConsignment();
				break;
			case 45:
				return $this->getInvoiceCopies();
				break;
			case 46:
				return $this->getInvoiceCopiesIwex();
				break;
			case 47:
				return $this->getInvoiceOption();
				break;
			case 48:
				return $this->getConfirmDelivery();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = ContactsPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getContactid(),
			$keys[1] => $this->getCompanyname(),
			$keys[2] => $this->getContactfirstname(),
			$keys[3] => $this->getContacttussenvoegs(),
			$keys[4] => $this->getContactname(),
			$keys[5] => $this->getContacttitle(),
			$keys[6] => $this->getAddress(),
			$keys[7] => $this->getCity(),
			$keys[8] => $this->getRegion(),
			$keys[9] => $this->getPostalcode(),
			$keys[10] => $this->getCountry(),
			$keys[11] => $this->getLanguageid(),
			$keys[12] => $this->getPhone(),
			$keys[13] => $this->getFax(),
			$keys[14] => $this->getMobilephone(),
			$keys[15] => $this->getEmail(),
			$keys[16] => $this->getWebsite(),
			$keys[17] => $this->getKvkNumber(),
			$keys[18] => $this->getUseBtw(),
			$keys[19] => $this->getBtwNumber(),
			$keys[20] => $this->getBankinfo(),
			$keys[21] => $this->getPaymentterm(),
			$keys[22] => $this->getPaymenttermMargin(),
			$keys[23] => $this->getUpsaccount(),
			$keys[24] => $this->getConditionsOkYn(),
			$keys[25] => $this->getMailing(),
			$keys[26] => $this->getDealerYn(),
			$keys[27] => $this->getAutoYn(),
			$keys[28] => $this->getWatersportYn(),
			$keys[29] => $this->getFotoYn(),
			$keys[30] => $this->getSupplierYn(),
			$keys[31] => $this->getContacttypeid(),
			$keys[32] => $this->getAanhef(),
			$keys[33] => $this->getPhoneextention(),
			$keys[34] => $this->getNotes(),
			$keys[35] => $this->getPricelevel(),
			$keys[36] => $this->getUid(),
			$keys[37] => $this->getPwd(),
			$keys[38] => $this->getGroupid(),
			$keys[39] => $this->getOrdercosts(),
			$keys[40] => $this->getTransportcost(),
			$keys[41] => $this->getOrdercostTypeId(),
			$keys[42] => $this->getCreditlimit(),
			$keys[43] => $this->getWarehouseCustomer(),
			$keys[44] => $this->getConsignment(),
			$keys[45] => $this->getInvoiceCopies(),
			$keys[46] => $this->getInvoiceCopiesIwex(),
			$keys[47] => $this->getInvoiceOption(),
			$keys[48] => $this->getConfirmDelivery(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = ContactsPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setContactid($value);
				break;
			case 1:
				$this->setCompanyname($value);
				break;
			case 2:
				$this->setContactfirstname($value);
				break;
			case 3:
				$this->setContacttussenvoegs($value);
				break;
			case 4:
				$this->setContactname($value);
				break;
			case 5:
				$this->setContacttitle($value);
				break;
			case 6:
				$this->setAddress($value);
				break;
			case 7:
				$this->setCity($value);
				break;
			case 8:
				$this->setRegion($value);
				break;
			case 9:
				$this->setPostalcode($value);
				break;
			case 10:
				$this->setCountry($value);
				break;
			case 11:
				$this->setLanguageid($value);
				break;
			case 12:
				$this->setPhone($value);
				break;
			case 13:
				$this->setFax($value);
				break;
			case 14:
				$this->setMobilephone($value);
				break;
			case 15:
				$this->setEmail($value);
				break;
			case 16:
				$this->setWebsite($value);
				break;
			case 17:
				$this->setKvkNumber($value);
				break;
			case 18:
				$this->setUseBtw($value);
				break;
			case 19:
				$this->setBtwNumber($value);
				break;
			case 20:
				$this->setBankinfo($value);
				break;
			case 21:
				$this->setPaymentterm($value);
				break;
			case 22:
				$this->setPaymenttermMargin($value);
				break;
			case 23:
				$this->setUpsaccount($value);
				break;
			case 24:
				$this->setConditionsOkYn($value);
				break;
			case 25:
				$this->setMailing($value);
				break;
			case 26:
				$this->setDealerYn($value);
				break;
			case 27:
				$this->setAutoYn($value);
				break;
			case 28:
				$this->setWatersportYn($value);
				break;
			case 29:
				$this->setFotoYn($value);
				break;
			case 30:
				$this->setSupplierYn($value);
				break;
			case 31:
				$this->setContacttypeid($value);
				break;
			case 32:
				$this->setAanhef($value);
				break;
			case 33:
				$this->setPhoneextention($value);
				break;
			case 34:
				$this->setNotes($value);
				break;
			case 35:
				$this->setPricelevel($value);
				break;
			case 36:
				$this->setUid($value);
				break;
			case 37:
				$this->setPwd($value);
				break;
			case 38:
				$this->setGroupid($value);
				break;
			case 39:
				$this->setOrdercosts($value);
				break;
			case 40:
				$this->setTransportcost($value);
				break;
			case 41:
				$this->setOrdercostTypeId($value);
				break;
			case 42:
				$this->setCreditlimit($value);
				break;
			case 43:
				$this->setWarehouseCustomer($value);
				break;
			case 44:
				$this->setConsignment($value);
				break;
			case 45:
				$this->setInvoiceCopies($value);
				break;
			case 46:
				$this->setInvoiceCopiesIwex($value);
				break;
			case 47:
				$this->setInvoiceOption($value);
				break;
			case 48:
				$this->setConfirmDelivery($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = ContactsPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setContactid($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setCompanyname($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setContactfirstname($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setContacttussenvoegs($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setContactname($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setContacttitle($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setAddress($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setCity($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setRegion($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setPostalcode($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setCountry($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setLanguageid($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setPhone($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setFax($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setMobilephone($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setEmail($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setWebsite($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setKvkNumber($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setUseBtw($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setBtwNumber($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setBankinfo($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setPaymentterm($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setPaymenttermMargin($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setUpsaccount($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setConditionsOkYn($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setMailing($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setDealerYn($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setAutoYn($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setWatersportYn($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setFotoYn($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setSupplierYn($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setContacttypeid($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setAanhef($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setPhoneextention($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setNotes($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setPricelevel($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setUid($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setPwd($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setGroupid($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setOrdercosts($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setTransportcost($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setOrdercostTypeId($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setCreditlimit($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setWarehouseCustomer($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setConsignment($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setInvoiceCopies($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setInvoiceCopiesIwex($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setInvoiceOption($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setConfirmDelivery($arr[$keys[48]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(ContactsPeer::DATABASE_NAME);

		if ($this->isColumnModified(ContactsPeer::CONTACTID)) $criteria->add(ContactsPeer::CONTACTID, $this->contactid);
		if ($this->isColumnModified(ContactsPeer::COMPANYNAME)) $criteria->add(ContactsPeer::COMPANYNAME, $this->companyname);
		if ($this->isColumnModified(ContactsPeer::CONTACTFIRSTNAME)) $criteria->add(ContactsPeer::CONTACTFIRSTNAME, $this->contactfirstname);
		if ($this->isColumnModified(ContactsPeer::CONTACTTUSSENVOEGS)) $criteria->add(ContactsPeer::CONTACTTUSSENVOEGS, $this->contacttussenvoegs);
		if ($this->isColumnModified(ContactsPeer::CONTACTNAME)) $criteria->add(ContactsPeer::CONTACTNAME, $this->contactname);
		if ($this->isColumnModified(ContactsPeer::CONTACTTITLE)) $criteria->add(ContactsPeer::CONTACTTITLE, $this->contacttitle);
		if ($this->isColumnModified(ContactsPeer::ADDRESS)) $criteria->add(ContactsPeer::ADDRESS, $this->address);
		if ($this->isColumnModified(ContactsPeer::CITY)) $criteria->add(ContactsPeer::CITY, $this->city);
		if ($this->isColumnModified(ContactsPeer::REGION)) $criteria->add(ContactsPeer::REGION, $this->region);
		if ($this->isColumnModified(ContactsPeer::POSTALCODE)) $criteria->add(ContactsPeer::POSTALCODE, $this->postalcode);
		if ($this->isColumnModified(ContactsPeer::COUNTRY)) $criteria->add(ContactsPeer::COUNTRY, $this->country);
		if ($this->isColumnModified(ContactsPeer::LANGUAGEID)) $criteria->add(ContactsPeer::LANGUAGEID, $this->languageid);
		if ($this->isColumnModified(ContactsPeer::PHONE)) $criteria->add(ContactsPeer::PHONE, $this->phone);
		if ($this->isColumnModified(ContactsPeer::FAX)) $criteria->add(ContactsPeer::FAX, $this->fax);
		if ($this->isColumnModified(ContactsPeer::MOBILEPHONE)) $criteria->add(ContactsPeer::MOBILEPHONE, $this->mobilephone);
		if ($this->isColumnModified(ContactsPeer::EMAIL)) $criteria->add(ContactsPeer::EMAIL, $this->email);
		if ($this->isColumnModified(ContactsPeer::WEBSITE)) $criteria->add(ContactsPeer::WEBSITE, $this->website);
		if ($this->isColumnModified(ContactsPeer::KVK_NUMBER)) $criteria->add(ContactsPeer::KVK_NUMBER, $this->kvk_number);
		if ($this->isColumnModified(ContactsPeer::USE_BTW)) $criteria->add(ContactsPeer::USE_BTW, $this->use_btw);
		if ($this->isColumnModified(ContactsPeer::BTW_NUMBER)) $criteria->add(ContactsPeer::BTW_NUMBER, $this->btw_number);
		if ($this->isColumnModified(ContactsPeer::BANKINFO)) $criteria->add(ContactsPeer::BANKINFO, $this->bankinfo);
		if ($this->isColumnModified(ContactsPeer::PAYMENTTERM)) $criteria->add(ContactsPeer::PAYMENTTERM, $this->paymentterm);
		if ($this->isColumnModified(ContactsPeer::PAYMENTTERM_MARGIN)) $criteria->add(ContactsPeer::PAYMENTTERM_MARGIN, $this->paymentterm_margin);
		if ($this->isColumnModified(ContactsPeer::UPSACCOUNT)) $criteria->add(ContactsPeer::UPSACCOUNT, $this->upsaccount);
		if ($this->isColumnModified(ContactsPeer::CONDITIONS_OK_YN)) $criteria->add(ContactsPeer::CONDITIONS_OK_YN, $this->conditions_ok_yn);
		if ($this->isColumnModified(ContactsPeer::MAILING)) $criteria->add(ContactsPeer::MAILING, $this->mailing);
		if ($this->isColumnModified(ContactsPeer::DEALER_YN)) $criteria->add(ContactsPeer::DEALER_YN, $this->dealer_yn);
		if ($this->isColumnModified(ContactsPeer::AUTO_YN)) $criteria->add(ContactsPeer::AUTO_YN, $this->auto_yn);
		if ($this->isColumnModified(ContactsPeer::WATERSPORT_YN)) $criteria->add(ContactsPeer::WATERSPORT_YN, $this->watersport_yn);
		if ($this->isColumnModified(ContactsPeer::FOTO_YN)) $criteria->add(ContactsPeer::FOTO_YN, $this->foto_yn);
		if ($this->isColumnModified(ContactsPeer::SUPPLIER_YN)) $criteria->add(ContactsPeer::SUPPLIER_YN, $this->supplier_yn);
		if ($this->isColumnModified(ContactsPeer::CONTACTTYPEID)) $criteria->add(ContactsPeer::CONTACTTYPEID, $this->contacttypeid);
		if ($this->isColumnModified(ContactsPeer::AANHEF)) $criteria->add(ContactsPeer::AANHEF, $this->aanhef);
		if ($this->isColumnModified(ContactsPeer::PHONEEXTENTION)) $criteria->add(ContactsPeer::PHONEEXTENTION, $this->phoneextention);
		if ($this->isColumnModified(ContactsPeer::NOTES)) $criteria->add(ContactsPeer::NOTES, $this->notes);
		if ($this->isColumnModified(ContactsPeer::PRICELEVEL)) $criteria->add(ContactsPeer::PRICELEVEL, $this->pricelevel);
		if ($this->isColumnModified(ContactsPeer::UID)) $criteria->add(ContactsPeer::UID, $this->uid);
		if ($this->isColumnModified(ContactsPeer::PWD)) $criteria->add(ContactsPeer::PWD, $this->pwd);
		if ($this->isColumnModified(ContactsPeer::GROUPID)) $criteria->add(ContactsPeer::GROUPID, $this->groupid);
		if ($this->isColumnModified(ContactsPeer::ORDERCOSTS)) $criteria->add(ContactsPeer::ORDERCOSTS, $this->ordercosts);
		if ($this->isColumnModified(ContactsPeer::TRANSPORTCOST)) $criteria->add(ContactsPeer::TRANSPORTCOST, $this->transportcost);
		if ($this->isColumnModified(ContactsPeer::ORDERCOST_TYPE_ID)) $criteria->add(ContactsPeer::ORDERCOST_TYPE_ID, $this->ordercost_type_id);
		if ($this->isColumnModified(ContactsPeer::CREDITLIMIT)) $criteria->add(ContactsPeer::CREDITLIMIT, $this->creditlimit);
		if ($this->isColumnModified(ContactsPeer::WAREHOUSE_CUSTOMER)) $criteria->add(ContactsPeer::WAREHOUSE_CUSTOMER, $this->warehouse_customer);
		if ($this->isColumnModified(ContactsPeer::CONSIGNMENT)) $criteria->add(ContactsPeer::CONSIGNMENT, $this->consignment);
		if ($this->isColumnModified(ContactsPeer::INVOICE_COPIES)) $criteria->add(ContactsPeer::INVOICE_COPIES, $this->invoice_copies);
		if ($this->isColumnModified(ContactsPeer::INVOICE_COPIES_IWEX)) $criteria->add(ContactsPeer::INVOICE_COPIES_IWEX, $this->invoice_copies_iwex);
		if ($this->isColumnModified(ContactsPeer::INVOICE_OPTION)) $criteria->add(ContactsPeer::INVOICE_OPTION, $this->invoice_option);
		if ($this->isColumnModified(ContactsPeer::CONFIRM_DELIVERY)) $criteria->add(ContactsPeer::CONFIRM_DELIVERY, $this->confirm_delivery);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(ContactsPeer::DATABASE_NAME);

		$criteria->add(ContactsPeer::CONTACTID, $this->contactid);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getContactid();
	}

	/**
	 * Generic method to set the primary key (contactid column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setContactid($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of Contacts (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setCompanyname($this->companyname);

		$copyObj->setContactfirstname($this->contactfirstname);

		$copyObj->setContacttussenvoegs($this->contacttussenvoegs);

		$copyObj->setContactname($this->contactname);

		$copyObj->setContacttitle($this->contacttitle);

		$copyObj->setAddress($this->address);

		$copyObj->setCity($this->city);

		$copyObj->setRegion($this->region);

		$copyObj->setPostalcode($this->postalcode);

		$copyObj->setCountry($this->country);

		$copyObj->setLanguageid($this->languageid);

		$copyObj->setPhone($this->phone);

		$copyObj->setFax($this->fax);

		$copyObj->setMobilephone($this->mobilephone);

		$copyObj->setEmail($this->email);

		$copyObj->setWebsite($this->website);

		$copyObj->setKvkNumber($this->kvk_number);

		$copyObj->setUseBtw($this->use_btw);

		$copyObj->setBtwNumber($this->btw_number);

		$copyObj->setBankinfo($this->bankinfo);

		$copyObj->setPaymentterm($this->paymentterm);

		$copyObj->setPaymenttermMargin($this->paymentterm_margin);

		$copyObj->setUpsaccount($this->upsaccount);

		$copyObj->setConditionsOkYn($this->conditions_ok_yn);

		$copyObj->setMailing($this->mailing);

		$copyObj->setDealerYn($this->dealer_yn);

		$copyObj->setAutoYn($this->auto_yn);

		$copyObj->setWatersportYn($this->watersport_yn);

		$copyObj->setFotoYn($this->foto_yn);

		$copyObj->setSupplierYn($this->supplier_yn);

		$copyObj->setContacttypeid($this->contacttypeid);

		$copyObj->setAanhef($this->aanhef);

		$copyObj->setPhoneextention($this->phoneextention);

		$copyObj->setNotes($this->notes);

		$copyObj->setPricelevel($this->pricelevel);

		$copyObj->setUid($this->uid);

		$copyObj->setPwd($this->pwd);

		$copyObj->setGroupid($this->groupid);

		$copyObj->setOrdercosts($this->ordercosts);

		$copyObj->setTransportcost($this->transportcost);

		$copyObj->setOrdercostTypeId($this->ordercost_type_id);

		$copyObj->setCreditlimit($this->creditlimit);

		$copyObj->setWarehouseCustomer($this->warehouse_customer);

		$copyObj->setConsignment($this->consignment);

		$copyObj->setInvoiceCopies($this->invoice_copies);

		$copyObj->setInvoiceCopiesIwex($this->invoice_copies_iwex);

		$copyObj->setInvoiceOption($this->invoice_option);

		$copyObj->setConfirmDelivery($this->confirm_delivery);


		$copyObj->setNew(true);

		$copyObj->setContactid(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     Contacts Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     ContactsPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new ContactsPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseContacts:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseContacts::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseContacts
