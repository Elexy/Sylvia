<?php

/**
 * BaseUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $uid
 * @property integer $languageid
 * @property integer $rma
 * @property integer $purchase
 * @property integer $stock
 * @property integer $logins
 * @property integer $login_attempts
 * @property integer $passw_change_attempts
 * @property integer $total_logins
 * @property integer $contactid
 * @property string $companyname
 * @property string $pwd
 * @property string $email
 * @property timestamp $last_online
 * 
 * @method integer   getId()                    Returns the current record's "id" value
 * @method string    getUid()                   Returns the current record's "uid" value
 * @method integer   getLanguageid()            Returns the current record's "languageid" value
 * @method integer   getRma()                   Returns the current record's "rma" value
 * @method integer   getPurchase()              Returns the current record's "purchase" value
 * @method integer   getStock()                 Returns the current record's "stock" value
 * @method integer   getLogins()                Returns the current record's "logins" value
 * @method integer   getLoginAttempts()         Returns the current record's "login_attempts" value
 * @method integer   getPasswChangeAttempts()   Returns the current record's "passw_change_attempts" value
 * @method integer   getTotalLogins()           Returns the current record's "total_logins" value
 * @method integer   getContactid()             Returns the current record's "contactid" value
 * @method string    getCompanyname()           Returns the current record's "companyname" value
 * @method string    getPwd()                   Returns the current record's "pwd" value
 * @method string    getEmail()                 Returns the current record's "email" value
 * @method timestamp getLastOnline()            Returns the current record's "last_online" value
 * @method Users     setId()                    Sets the current record's "id" value
 * @method Users     setUid()                   Sets the current record's "uid" value
 * @method Users     setLanguageid()            Sets the current record's "languageid" value
 * @method Users     setRma()                   Sets the current record's "rma" value
 * @method Users     setPurchase()              Sets the current record's "purchase" value
 * @method Users     setStock()                 Sets the current record's "stock" value
 * @method Users     setLogins()                Sets the current record's "logins" value
 * @method Users     setLoginAttempts()         Sets the current record's "login_attempts" value
 * @method Users     setPasswChangeAttempts()   Sets the current record's "passw_change_attempts" value
 * @method Users     setTotalLogins()           Sets the current record's "total_logins" value
 * @method Users     setContactid()             Sets the current record's "contactid" value
 * @method Users     setCompanyname()           Sets the current record's "companyname" value
 * @method Users     setPwd()                   Sets the current record's "pwd" value
 * @method Users     setEmail()                 Sets the current record's "email" value
 * @method Users     setLastOnline()            Sets the current record's "last_online" value
 * 
 * @package    andrea
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('uid', 'string', 30, array(
             'type' => 'string',
             'default' => '',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('languageid', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '1',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('rma', 'integer', 1, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('purchase', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('stock', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('logins', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('login_attempts', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('passw_change_attempts', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('total_logins', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('contactid', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('companyname', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('pwd', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('last_online', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}