<?php

/**
 * BaseListbox
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $value
 * @property integer $category
 * @property string $text
 * @property string $comments
 * @property string $color
 * 
 * @method integer getId()       Returns the current record's "id" value
 * @method string  getValue()    Returns the current record's "value" value
 * @method integer getCategory() Returns the current record's "category" value
 * @method string  getText()     Returns the current record's "text" value
 * @method string  getComments() Returns the current record's "comments" value
 * @method string  getColor()    Returns the current record's "color" value
 * @method Listbox setId()       Sets the current record's "id" value
 * @method Listbox setValue()    Sets the current record's "value" value
 * @method Listbox setCategory() Sets the current record's "category" value
 * @method Listbox setText()     Sets the current record's "text" value
 * @method Listbox setComments() Sets the current record's "comments" value
 * @method Listbox setColor()    Sets the current record's "color" value
 * 
 * @package    andrea
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseListbox extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('listbox');
        $this->hasColumn('id', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             'length' => 1,
             ));
        $this->hasColumn('value', 'string', 25, array(
             'type' => 'string',
             'default' => '0',
             'length' => 25,
             ));
        $this->hasColumn('category', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('text', 'string', 25, array(
             'type' => 'string',
             'length' => 25,
             ));
        $this->hasColumn('comments', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('color', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}