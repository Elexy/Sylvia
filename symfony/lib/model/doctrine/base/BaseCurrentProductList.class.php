<?php

/**
 * BaseCurrentProductList
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $productid
 * @property integer $categoryid
 * @property integer $subcategoryid
 * @property decimal $purchase_price_foreign
 * @property decimal $purchase_price_home
 * @property decimal $extra_cost
 * @property decimal $margin_correction
 * @property decimal $price_discovery
 * @property decimal $price_discovery_10
 * @property decimal $price_discovery_100
 * @property decimal $selling_price
 * @property decimal $selling_price_10
 * @property decimal $selling_price_50
 * @property decimal $selling_price_100
 * @property decimal $retail_price_ex
 * @property integer $btw_class
 * @property integer $euproductcode
 * @property integer $exp_rating
 * @property integer $taric
 * @property integer $ean
 * @property integer $reorder_q
 * @property integer $reorderlevel
 * @property integer $leadtime
 * @property integer $supplier
 * @property string $merk
 * @property integer $merkid
 * @property integer $pricelist_yn
 * @property integer $roadking
 * @property integer $neptune
 * @property integer $outdoor
 * @property integer $discontinued_yn
 * @property string $externalid
 * @property integer $currency
 * @property decimal $weight_corr
 * @property timestamp $dummy
 * @property integer $sku
 * @property integer $old_location_id
 * @property integer $special
 * @property integer $public
 * @property integer $store_serial_yn
 * @property string $productname
 * @property string $productdescription
 * @property integer $old_stock
 * @property date $last_exp
 * @property string $image
 * 
 * @method integer            getProductid()              Returns the current record's "productid" value
 * @method integer            getCategoryid()             Returns the current record's "categoryid" value
 * @method integer            getSubcategoryid()          Returns the current record's "subcategoryid" value
 * @method decimal            getPurchasePriceForeign()   Returns the current record's "purchase_price_foreign" value
 * @method decimal            getPurchasePriceHome()      Returns the current record's "purchase_price_home" value
 * @method decimal            getExtraCost()              Returns the current record's "extra_cost" value
 * @method decimal            getMarginCorrection()       Returns the current record's "margin_correction" value
 * @method decimal            getPriceDiscovery()         Returns the current record's "price_discovery" value
 * @method decimal            getPriceDiscovery10()       Returns the current record's "price_discovery_10" value
 * @method decimal            getPriceDiscovery100()      Returns the current record's "price_discovery_100" value
 * @method decimal            getSellingPrice()           Returns the current record's "selling_price" value
 * @method decimal            getSellingPrice10()         Returns the current record's "selling_price_10" value
 * @method decimal            getSellingPrice50()         Returns the current record's "selling_price_50" value
 * @method decimal            getSellingPrice100()        Returns the current record's "selling_price_100" value
 * @method decimal            getRetailPriceEx()          Returns the current record's "retail_price_ex" value
 * @method integer            getBtwClass()               Returns the current record's "btw_class" value
 * @method integer            getEuproductcode()          Returns the current record's "euproductcode" value
 * @method integer            getExpRating()              Returns the current record's "exp_rating" value
 * @method integer            getTaric()                  Returns the current record's "taric" value
 * @method integer            getEan()                    Returns the current record's "ean" value
 * @method integer            getReorderQ()               Returns the current record's "reorder_q" value
 * @method integer            getReorderlevel()           Returns the current record's "reorderlevel" value
 * @method integer            getLeadtime()               Returns the current record's "leadtime" value
 * @method integer            getSupplier()               Returns the current record's "supplier" value
 * @method string             getMerk()                   Returns the current record's "merk" value
 * @method integer            getMerkid()                 Returns the current record's "merkid" value
 * @method integer            getPricelistYn()            Returns the current record's "pricelist_yn" value
 * @method integer            getRoadking()               Returns the current record's "roadking" value
 * @method integer            getNeptune()                Returns the current record's "neptune" value
 * @method integer            getOutdoor()                Returns the current record's "outdoor" value
 * @method integer            getDiscontinuedYn()         Returns the current record's "discontinued_yn" value
 * @method string             getExternalid()             Returns the current record's "externalid" value
 * @method integer            getCurrency()               Returns the current record's "currency" value
 * @method decimal            getWeightCorr()             Returns the current record's "weight_corr" value
 * @method timestamp          getDummy()                  Returns the current record's "dummy" value
 * @method integer            getSku()                    Returns the current record's "sku" value
 * @method integer            getOldLocationId()          Returns the current record's "old_location_id" value
 * @method integer            getSpecial()                Returns the current record's "special" value
 * @method integer            getPublic()                 Returns the current record's "public" value
 * @method integer            getStoreSerialYn()          Returns the current record's "store_serial_yn" value
 * @method string             getProductname()            Returns the current record's "productname" value
 * @method string             getProductdescription()     Returns the current record's "productdescription" value
 * @method integer            getOldStock()               Returns the current record's "old_stock" value
 * @method date               getLastExp()                Returns the current record's "last_exp" value
 * @method string             getImage()                  Returns the current record's "image" value
 * @method CurrentProductList setProductid()              Sets the current record's "productid" value
 * @method CurrentProductList setCategoryid()             Sets the current record's "categoryid" value
 * @method CurrentProductList setSubcategoryid()          Sets the current record's "subcategoryid" value
 * @method CurrentProductList setPurchasePriceForeign()   Sets the current record's "purchase_price_foreign" value
 * @method CurrentProductList setPurchasePriceHome()      Sets the current record's "purchase_price_home" value
 * @method CurrentProductList setExtraCost()              Sets the current record's "extra_cost" value
 * @method CurrentProductList setMarginCorrection()       Sets the current record's "margin_correction" value
 * @method CurrentProductList setPriceDiscovery()         Sets the current record's "price_discovery" value
 * @method CurrentProductList setPriceDiscovery10()       Sets the current record's "price_discovery_10" value
 * @method CurrentProductList setPriceDiscovery100()      Sets the current record's "price_discovery_100" value
 * @method CurrentProductList setSellingPrice()           Sets the current record's "selling_price" value
 * @method CurrentProductList setSellingPrice10()         Sets the current record's "selling_price_10" value
 * @method CurrentProductList setSellingPrice50()         Sets the current record's "selling_price_50" value
 * @method CurrentProductList setSellingPrice100()        Sets the current record's "selling_price_100" value
 * @method CurrentProductList setRetailPriceEx()          Sets the current record's "retail_price_ex" value
 * @method CurrentProductList setBtwClass()               Sets the current record's "btw_class" value
 * @method CurrentProductList setEuproductcode()          Sets the current record's "euproductcode" value
 * @method CurrentProductList setExpRating()              Sets the current record's "exp_rating" value
 * @method CurrentProductList setTaric()                  Sets the current record's "taric" value
 * @method CurrentProductList setEan()                    Sets the current record's "ean" value
 * @method CurrentProductList setReorderQ()               Sets the current record's "reorder_q" value
 * @method CurrentProductList setReorderlevel()           Sets the current record's "reorderlevel" value
 * @method CurrentProductList setLeadtime()               Sets the current record's "leadtime" value
 * @method CurrentProductList setSupplier()               Sets the current record's "supplier" value
 * @method CurrentProductList setMerk()                   Sets the current record's "merk" value
 * @method CurrentProductList setMerkid()                 Sets the current record's "merkid" value
 * @method CurrentProductList setPricelistYn()            Sets the current record's "pricelist_yn" value
 * @method CurrentProductList setRoadking()               Sets the current record's "roadking" value
 * @method CurrentProductList setNeptune()                Sets the current record's "neptune" value
 * @method CurrentProductList setOutdoor()                Sets the current record's "outdoor" value
 * @method CurrentProductList setDiscontinuedYn()         Sets the current record's "discontinued_yn" value
 * @method CurrentProductList setExternalid()             Sets the current record's "externalid" value
 * @method CurrentProductList setCurrency()               Sets the current record's "currency" value
 * @method CurrentProductList setWeightCorr()             Sets the current record's "weight_corr" value
 * @method CurrentProductList setDummy()                  Sets the current record's "dummy" value
 * @method CurrentProductList setSku()                    Sets the current record's "sku" value
 * @method CurrentProductList setOldLocationId()          Sets the current record's "old_location_id" value
 * @method CurrentProductList setSpecial()                Sets the current record's "special" value
 * @method CurrentProductList setPublic()                 Sets the current record's "public" value
 * @method CurrentProductList setStoreSerialYn()          Sets the current record's "store_serial_yn" value
 * @method CurrentProductList setProductname()            Sets the current record's "productname" value
 * @method CurrentProductList setProductdescription()     Sets the current record's "productdescription" value
 * @method CurrentProductList setOldStock()               Sets the current record's "old_stock" value
 * @method CurrentProductList setLastExp()                Sets the current record's "last_exp" value
 * @method CurrentProductList setImage()                  Sets the current record's "image" value
 * 
 * @package    andrea
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCurrentProductList extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('current_product_list');
        $this->hasColumn('productid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('categoryid', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 1,
             ));
        $this->hasColumn('subcategoryid', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('purchase_price_foreign', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('purchase_price_home', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('extra_cost', 'decimal', 6, array(
             'type' => 'decimal',
             'default' => '0.0000',
             'notnull' => true,
             'scale' => false,
             'length' => 6,
             ));
        $this->hasColumn('margin_correction', 'decimal', 6, array(
             'type' => 'decimal',
             'default' => '1.0000',
             'notnull' => true,
             'scale' => false,
             'length' => 6,
             ));
        $this->hasColumn('price_discovery', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('price_discovery_10', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('price_discovery_100', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('selling_price', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('selling_price_10', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('selling_price_50', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('selling_price_100', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('retail_price_ex', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('btw_class', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('euproductcode', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('exp_rating', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 1,
             ));
        $this->hasColumn('taric', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('ean', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 8,
             ));
        $this->hasColumn('reorder_q', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '1',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('reorderlevel', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 2,
             ));
        $this->hasColumn('leadtime', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 1,
             ));
        $this->hasColumn('supplier', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('merk', 'string', 35, array(
             'type' => 'string',
             'default' => '',
             'notnull' => true,
             'length' => 35,
             ));
        $this->hasColumn('merkid', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('pricelist_yn', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('roadking', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('neptune', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('outdoor', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('discontinued_yn', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('externalid', 'string', 30, array(
             'type' => 'string',
             'default' => '0',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('currency', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '2',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('weight_corr', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('dummy', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('sku', 'integer', 1, array(
             'type' => 'integer',
             'default' => '1',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('old_location_id', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 2,
             ));
        $this->hasColumn('special', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('public', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('store_serial_yn', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('productname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('productdescription', 'string', 6, array(
             'type' => 'string',
             'length' => 6,
             ));
        $this->hasColumn('old_stock', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('last_exp', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('image', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}