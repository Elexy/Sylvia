<?php

/**
 * BaseTempInvTransactions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $transactionid
 * @property integer $orderid
 * @property integer $orderdetailsid
 * @property integer $shipmentid
 * @property decimal $unitprice
 * @property integer $unitssold
 * @property decimal $btw_percentage
 * @property float $added_cost
 * @property integer $box_id
 * @property integer $employee
 * @property integer $stock_owner_id
 * @property timestamp $transactiondate
 * @property integer $productid
 * @property string $description
 * 
 * @method integer             getTransactionid()   Returns the current record's "transactionid" value
 * @method integer             getOrderid()         Returns the current record's "orderid" value
 * @method integer             getOrderdetailsid()  Returns the current record's "orderdetailsid" value
 * @method integer             getShipmentid()      Returns the current record's "shipmentid" value
 * @method decimal             getUnitprice()       Returns the current record's "unitprice" value
 * @method integer             getUnitssold()       Returns the current record's "unitssold" value
 * @method decimal             getBtwPercentage()   Returns the current record's "btw_percentage" value
 * @method float               getAddedCost()       Returns the current record's "added_cost" value
 * @method integer             getBoxId()           Returns the current record's "box_id" value
 * @method integer             getEmployee()        Returns the current record's "employee" value
 * @method integer             getStockOwnerId()    Returns the current record's "stock_owner_id" value
 * @method timestamp           getTransactiondate() Returns the current record's "transactiondate" value
 * @method integer             getProductid()       Returns the current record's "productid" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method TempInvTransactions setTransactionid()   Sets the current record's "transactionid" value
 * @method TempInvTransactions setOrderid()         Sets the current record's "orderid" value
 * @method TempInvTransactions setOrderdetailsid()  Sets the current record's "orderdetailsid" value
 * @method TempInvTransactions setShipmentid()      Sets the current record's "shipmentid" value
 * @method TempInvTransactions setUnitprice()       Sets the current record's "unitprice" value
 * @method TempInvTransactions setUnitssold()       Sets the current record's "unitssold" value
 * @method TempInvTransactions setBtwPercentage()   Sets the current record's "btw_percentage" value
 * @method TempInvTransactions setAddedCost()       Sets the current record's "added_cost" value
 * @method TempInvTransactions setBoxId()           Sets the current record's "box_id" value
 * @method TempInvTransactions setEmployee()        Sets the current record's "employee" value
 * @method TempInvTransactions setStockOwnerId()    Sets the current record's "stock_owner_id" value
 * @method TempInvTransactions setTransactiondate() Sets the current record's "transactiondate" value
 * @method TempInvTransactions setProductid()       Sets the current record's "productid" value
 * @method TempInvTransactions setDescription()     Sets the current record's "description" value
 * 
 * @package    andrea
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTempInvTransactions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('temp_inv_transactions');
        $this->hasColumn('transactionid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('orderid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('orderdetailsid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('shipmentid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('unitprice', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('unitssold', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('btw_percentage', 'decimal', 4, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 4,
             ));
        $this->hasColumn('added_cost', 'float', 6, array(
             'type' => 'float',
             'default' => '0',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('box_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('employee', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 1,
             ));
        $this->hasColumn('stock_owner_id', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('transactiondate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('productid', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}