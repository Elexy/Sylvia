<?php

/**
 * BasePoDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $podetailsid
 * @property integer $poid
 * @property integer $productid
 * @property decimal $unitprice
 * @property integer $to_deliver
 * @property decimal $tax_percentage
 * @property float $added_cost
 * @property date $podate
 * @property integer $quantity
 * @property date $last_exp
 * @property string $comments
 * 
 * @method integer   getPodetailsid()    Returns the current record's "podetailsid" value
 * @method integer   getPoid()           Returns the current record's "poid" value
 * @method integer   getProductid()      Returns the current record's "productid" value
 * @method decimal   getUnitprice()      Returns the current record's "unitprice" value
 * @method integer   getToDeliver()      Returns the current record's "to_deliver" value
 * @method decimal   getTaxPercentage()  Returns the current record's "tax_percentage" value
 * @method float     getAddedCost()      Returns the current record's "added_cost" value
 * @method date      getPodate()         Returns the current record's "podate" value
 * @method integer   getQuantity()       Returns the current record's "quantity" value
 * @method date      getLastExp()        Returns the current record's "last_exp" value
 * @method string    getComments()       Returns the current record's "comments" value
 * @method PoDetails setPodetailsid()    Sets the current record's "podetailsid" value
 * @method PoDetails setPoid()           Sets the current record's "poid" value
 * @method PoDetails setProductid()      Sets the current record's "productid" value
 * @method PoDetails setUnitprice()      Sets the current record's "unitprice" value
 * @method PoDetails setToDeliver()      Sets the current record's "to_deliver" value
 * @method PoDetails setTaxPercentage()  Sets the current record's "tax_percentage" value
 * @method PoDetails setAddedCost()      Sets the current record's "added_cost" value
 * @method PoDetails setPodate()         Sets the current record's "podate" value
 * @method PoDetails setQuantity()       Sets the current record's "quantity" value
 * @method PoDetails setLastExp()        Sets the current record's "last_exp" value
 * @method PoDetails setComments()       Sets the current record's "comments" value
 * 
 * @package    andrea
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePoDetails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('po_details');
        $this->hasColumn('podetailsid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('poid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('productid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('unitprice', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.0000',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('to_deliver', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('tax_percentage', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('added_cost', 'float', 6, array(
             'type' => 'float',
             'default' => '0',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('podate', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('quantity', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('last_exp', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('comments', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}