<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseInvoices extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('invoices');
        $this->hasColumn('employeeid', 'integer', 2, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '2'));
        $this->hasColumn('invoiceid', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'primary' => true, 'autoincrement' => true, 'length' => '4'));
        $this->hasColumn('orderid', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'length' => '4'));
        $this->hasColumn('shipmentid', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'length' => '4'));
        $this->hasColumn('invoice_total', 'decimal', 10, array('type' => 'decimal', 'default' => '0.00', 'scale' => false, 'length' => '10'));
        $this->hasColumn('invoice_btw', 'decimal', 10, array('type' => 'decimal', 'default' => '0.00', 'scale' => false, 'length' => '10'));
        $this->hasColumn('paid_yn', 'integer', 1, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'length' => '1'));
        $this->hasColumn('paid_amount', 'decimal', 10, array('type' => 'decimal', 'default' => '0.00', 'scale' => false, 'length' => '10'));
        $this->hasColumn('dummy', 'timestamp', 25, array('type' => 'timestamp', 'notnull' => true, 'length' => '25'));
        $this->hasColumn('payment_type', 'integer', 1, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'length' => '1'));
        $this->hasColumn('paymentterm', 'integer', 1, array('type' => 'integer', 'unsigned' => '1', 'length' => '1'));
        $this->hasColumn('vat_number', 'string', 15, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '15'));
        $this->hasColumn('dispuutid', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '4'));
        $this->hasColumn('overduetypeid', 'integer', 4, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '4'));
        $this->hasColumn('shipname', 'string', 100, array('type' => 'string', 'length' => '100'));
        $this->hasColumn('shipaddress', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('shipcity', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('shipregion', 'string', 40, array('type' => 'string', 'length' => '40'));
        $this->hasColumn('shippostalcode', 'string', 15, array('type' => 'string', 'length' => '15'));
        $this->hasColumn('shipcountry', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('customerid', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('companyname', 'string', 100, array('type' => 'string', 'length' => '100'));
        $this->hasColumn('address', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('city', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('region', 'string', 40, array('type' => 'string', 'length' => '40'));
        $this->hasColumn('postalcode', 'string', 15, array('type' => 'string', 'length' => '15'));
        $this->hasColumn('country', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('orderdate', 'timestamp', 25, array('type' => 'timestamp', 'length' => '25'));
        $this->hasColumn('requireddate', 'timestamp', 25, array('type' => 'timestamp', 'length' => '25'));
        $this->hasColumn('shippeddate', 'timestamp', 25, array('type' => 'timestamp', 'length' => '25'));
        $this->hasColumn('companynameship', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('btw', 'integer', 1, array('type' => 'integer', 'length' => '1'));
        $this->hasColumn('paid_date', 'date', 25, array('type' => 'date', 'length' => '25'));
        $this->hasColumn('invoice_date', 'date', 25, array('type' => 'date', 'length' => '25'));
    }

}