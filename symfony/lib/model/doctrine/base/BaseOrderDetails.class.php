<?php

/**
 * BaseOrderDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $orderdetailsid
 * @property integer $orderid
 * @property integer $productid
 * @property decimal $unitprice
 * @property decimal $unitcost
 * @property decimal $unitbtw
 * @property decimal $quantity
 * @property integer $to_deliver
 * @property decimal $extended_price
 * @property timestamp $dummy
 * @property integer $contactid
 * @property decimal $btw_percentage
 * @property float $cost_percentage
 * @property integer $manual_price
 * @property integer $rma_actionid
 * @property integer $stock_owner_id
 * @property string $productname
 * @property string $productdescription
 * @property float $discount
 * @property string $serialnb
 * @property date $orderdate
 * @property string $custorderrowid
 * 
 * @method integer      getOrderdetailsid()     Returns the current record's "orderdetailsid" value
 * @method integer      getOrderid()            Returns the current record's "orderid" value
 * @method integer      getProductid()          Returns the current record's "productid" value
 * @method decimal      getUnitprice()          Returns the current record's "unitprice" value
 * @method decimal      getUnitcost()           Returns the current record's "unitcost" value
 * @method decimal      getUnitbtw()            Returns the current record's "unitbtw" value
 * @method decimal      getQuantity()           Returns the current record's "quantity" value
 * @method integer      getToDeliver()          Returns the current record's "to_deliver" value
 * @method decimal      getExtendedPrice()      Returns the current record's "extended_price" value
 * @method timestamp    getDummy()              Returns the current record's "dummy" value
 * @method integer      getContactid()          Returns the current record's "contactid" value
 * @method decimal      getBtwPercentage()      Returns the current record's "btw_percentage" value
 * @method float        getCostPercentage()     Returns the current record's "cost_percentage" value
 * @method integer      getManualPrice()        Returns the current record's "manual_price" value
 * @method integer      getRmaActionid()        Returns the current record's "rma_actionid" value
 * @method integer      getStockOwnerId()       Returns the current record's "stock_owner_id" value
 * @method string       getProductname()        Returns the current record's "productname" value
 * @method string       getProductdescription() Returns the current record's "productdescription" value
 * @method float        getDiscount()           Returns the current record's "discount" value
 * @method string       getSerialnb()           Returns the current record's "serialnb" value
 * @method date         getOrderdate()          Returns the current record's "orderdate" value
 * @method string       getCustorderrowid()     Returns the current record's "custorderrowid" value
 * @method OrderDetails setOrderdetailsid()     Sets the current record's "orderdetailsid" value
 * @method OrderDetails setOrderid()            Sets the current record's "orderid" value
 * @method OrderDetails setProductid()          Sets the current record's "productid" value
 * @method OrderDetails setUnitprice()          Sets the current record's "unitprice" value
 * @method OrderDetails setUnitcost()           Sets the current record's "unitcost" value
 * @method OrderDetails setUnitbtw()            Sets the current record's "unitbtw" value
 * @method OrderDetails setQuantity()           Sets the current record's "quantity" value
 * @method OrderDetails setToDeliver()          Sets the current record's "to_deliver" value
 * @method OrderDetails setExtendedPrice()      Sets the current record's "extended_price" value
 * @method OrderDetails setDummy()              Sets the current record's "dummy" value
 * @method OrderDetails setContactid()          Sets the current record's "contactid" value
 * @method OrderDetails setBtwPercentage()      Sets the current record's "btw_percentage" value
 * @method OrderDetails setCostPercentage()     Sets the current record's "cost_percentage" value
 * @method OrderDetails setManualPrice()        Sets the current record's "manual_price" value
 * @method OrderDetails setRmaActionid()        Sets the current record's "rma_actionid" value
 * @method OrderDetails setStockOwnerId()       Sets the current record's "stock_owner_id" value
 * @method OrderDetails setProductname()        Sets the current record's "productname" value
 * @method OrderDetails setProductdescription() Sets the current record's "productdescription" value
 * @method OrderDetails setDiscount()           Sets the current record's "discount" value
 * @method OrderDetails setSerialnb()           Sets the current record's "serialnb" value
 * @method OrderDetails setOrderdate()          Sets the current record's "orderdate" value
 * @method OrderDetails setCustorderrowid()     Sets the current record's "custorderrowid" value
 * 
 * @package    andrea
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrderDetails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order_details');
        $this->hasColumn('orderdetailsid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('orderid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('productid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('unitprice', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('unitcost', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('unitbtw', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('quantity', 'decimal', 6, array(
             'type' => 'decimal',
             'scale' => false,
             'length' => 6,
             ));
        $this->hasColumn('to_deliver', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('extended_price', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('dummy', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('contactid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('btw_percentage', 'decimal', 10, array(
             'type' => 'decimal',
             'default' => '0.00',
             'notnull' => true,
             'scale' => false,
             'length' => 10,
             ));
        $this->hasColumn('cost_percentage', 'float', 6, array(
             'type' => 'float',
             'default' => '0',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('manual_price', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '0',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('rma_actionid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 1,
             'length' => 4,
             ));
        $this->hasColumn('stock_owner_id', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => 1,
             'default' => '802',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('productname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('productdescription', 'string', 6, array(
             'type' => 'string',
             'length' => 6,
             ));
        $this->hasColumn('discount', 'float', 6, array(
             'type' => 'float',
             'length' => 6,
             ));
        $this->hasColumn('serialnb', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('orderdate', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('custorderrowid', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}